{"ast":null,"code":"import { FormGroup, Validators, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/knight.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction NewComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n}\nfunction NewComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NewComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 10);\n  }\n}\nfunction NewComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class NewComponent {\n  constructor(knightService) {\n    this.knightService = knightService;\n    this.newForm = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      nickname: new FormControl('', [Validators.required]),\n      birthday: new FormControl('', [Validators.required]),\n      keyAttribute: new FormControl('', [Validators.required]),\n      strength: new FormControl('', [Validators.required]),\n      dexterity: new FormControl('', [Validators.required]),\n      constitution: new FormControl('', [Validators.required]),\n      intelligence: new FormControl('', [Validators.required]),\n      charisma: new FormControl('', [Validators.required]),\n      wisdom: new FormControl('', [Validators.required])\n    });\n  }\n  ngOnInit() {}\n  get f() {\n    return this.newForm.controls;\n  }\n  submit() {\n    if (this.newForm.invalid) return;\n    this.knightService.create(this.knight);\n  }\n}\nNewComponent.ɵfac = function NewComponent_Factory(t) {\n  return new (t || NewComponent)(i0.ɵɵdirectiveInject(i1.KnightService));\n};\nNewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewComponent,\n  selectors: [[\"app-new\"]],\n  decls: 15,\n  vars: 11,\n  consts: [[2, \"margin-top\", \"10px\"], [3, \"formGroup\", \"ngSubmit\"], [\"formDir\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"formControlName\", \"name\", \"placeholder\", \"your name\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [4, \"ngIf\"], [\"for\", \"nickName\"], [\"type\", \"text\", \"formControlName\", \"nickName\", \"placeholder\", \"your nickName\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [1, \"invalid-feedback\"]],\n  template: function NewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function NewComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵtemplate(7, NewComponent_div_7_Template, 1, 0, \"div\", 6);\n      i0.ɵɵtemplate(8, NewComponent_div_8_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Nickname\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵtemplate(13, NewComponent_div_13_Template, 1, 0, \"div\", 6);\n      i0.ɵɵtemplate(14, NewComponent_div_14_Template, 2, 0, \"div\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.newForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, _r0.submitted && ctx.f[\"name\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.submitted && ctx.f[\"name\"].errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.f[\"name\"].errors == null ? null : ctx.f[\"name\"].errors[\"required\"]);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, _r0.submitted && ctx.f[\"nickName\"].errors));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r0.submitted && ctx.f[\"nickName\"].errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.f[\"nickName\"].errors == null ? null : ctx.f[\"nickName\"].errors[\"required\"]);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".width[_ngcontent-%COMP%]{width: 200px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9uZXcvbmV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxZQUFZLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIud2lkdGh7d2lkdGg6IDIwMHB4O30iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SACiCA,SAAS,EAAEC,UAAU,EAAEC,WAAW,QAC5D,gBAAgB;;;;;;;ICQXC,0BAAkF;;;;;IAClFA,2BAA4C;IAAAA,gCAAgB;IAAAA,iBAAM;;;;;IAWjEA,0BAAsF;;;;;IACtFA,2BAAgD;IAAAA,gCAAgB;IAAAA,iBAAM;;;;;;;;ADXnF,OAAM,MAAOC,YAAY;EAiBvBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAfjC,YAAO,GAAe,IAAIN,SAAS,CAAC;MAClCO,IAAI,EAAE,IAAIL,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MAChDC,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MACpDE,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MACpDG,YAAY,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MACxDI,QAAQ,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MACpDK,SAAS,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MACrDM,YAAY,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MACxDO,YAAY,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MACxDQ,QAAQ,EAAE,IAAId,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC,CAAC;MACpDS,MAAM,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAE,CAACD,UAAU,CAACO,QAAQ,CAAC;KAClD,CAAC;EAIiD;EAEnDU,QAAQ,IAER;EAEA,IAAIC,CAAC;IACH,OAAO,IAAI,CAACC,OAAO,CAACC,QAAS;EAC/B;EAEAC,MAAM;IAEJ,IAAG,IAAI,CAACF,OAAO,CAACG,OAAO,EACrB;IAGA,IAAI,CAACjB,aAAa,CAACkB,MAAM,CAAC,IAAI,CAACC,MAAM,CAAC;EAC1C;;AAlCWrB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbzB3B,8BAAgC;MAC1BA;QAAA,OAAY4B,YAAQ;MAAA,EAAC;MACvB5B,8BAAwB;MACHA,oBAAI;MAAAA,iBAAQ;MAC3BA,2BAMG;MACDA,6DAAkF;MAClFA,6DAAkE;MAC1EA,iBAAM;MACNA,8BAAwB;MACEA,yBAAQ;MAAAA,iBAAQ;MACnCA,4BAMG;MACDA,+DAAsF;MACtFA,+DAAsE;MAC9EA,iBAAM;;;;MAxBiBA,eAAqB;MAArBA,uCAAqB;MAQrCA,eAAmE;MAAnEA,2FAAmE;MAE7DA,eAA2C;MAA3CA,4DAA2C;MAC3CA,eAAoC;MAApCA,6FAAoC;MAQzCA,eAAuE;MAAvEA,+FAAuE;MAGjEA,eAA+C;MAA/CA,gEAA+C;MAC/CA,eAAwC;MAAxCA,qGAAwC","names":["FormGroup","Validators","FormControl","i0","NewComponent","constructor","knightService","name","required","nickname","birthday","keyAttribute","strength","dexterity","constitution","intelligence","charisma","wisdom","ngOnInit","f","newForm","controls","submit","invalid","create","knight","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\hfink\\source\\repos\\knights-challenge\\src\\ui\\knight.angular\\src\\app\\components\\new\\new.component.ts","C:\\Users\\hfink\\source\\repos\\knights-challenge\\src\\ui\\knight.angular\\src\\app\\components\\new\\new.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {\n   AbstractControl, FormBuilder, FormGroup, Validators, FormControl\n} from '@angular/forms';\nimport  {Knight} from 'src/app/knight';\nimport { KnightService} from 'src/app/services/knight.service'\n\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n\n  newForm: FormGroup =  new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    nickname: new FormControl('', [Validators.required]),\n    birthday: new FormControl('', [Validators.required]),\n    keyAttribute: new FormControl('', [Validators.required]),\n    strength: new FormControl('', [Validators.required]),\n    dexterity: new FormControl('', [Validators.required]),\n    constitution: new FormControl('', [Validators.required]),\n    intelligence: new FormControl('', [Validators.required]),\n    charisma: new FormControl('', [Validators.required]),\n    wisdom: new FormControl('', [Validators.required]),\n  });\n;\n  knight! : Knight;\n\n  constructor(private knightService: KnightService) {}\n\n  ngOnInit() : void {\n\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.newForm.controls!;\n  }\n  \n  submit(){\n\n    if(this.newForm.invalid)\n      return;\n\n\n      this.knightService.create(this.knight);\n  }\n}\n","<div  style=\"margin-top: 10px;\">\n<form (ngSubmit)=\"submit()\" [formGroup]=\"newForm\" #formDir=\"ngForm\">\n    <div class=\"form-group\">\n       <label for=\"name\">Name</label>\n          <input type=\"text\" \n            class=\"form-control\" \n            formControlName=\"name\"\n            placeholder=\"your name\"\n            required\n            [ngClass]=\"{ 'is-invalid': formDir.submitted && f['name'].errors }\"\n            >\n            <div *ngIf=\"formDir.submitted && f['name'].errors\" class=\"invalid-feedback\"></div>\n            <div *ngIf=\"f['name'].errors?.['required']\">Name is required</div> \n    </div> \n    <div class=\"form-group\">\n        <label for=\"nickName\">Nickname</label>\n           <input type=\"text\" \n             class=\"form-control\" \n             formControlName=\"nickName\"\n             placeholder=\"your nickName\"\n             [ngClass]=\"{ 'is-invalid': formDir.submitted && f['nickName'].errors }\"\n             required\n             >\n             <div *ngIf=\"formDir.submitted && f['nickName'].errors\" class=\"invalid-feedback\"></div>\n             <div *ngIf=\"f['nickName'].errors?.['required']\">Name is required</div> \n     </div> \n</form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}